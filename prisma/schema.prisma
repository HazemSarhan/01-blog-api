// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  bio String?
  profilePicture String?
  role UserRoles @default(USER)
  blog Blog[]
  reactions Reaction[]
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id Int @id @default(autoincrement())
  title String
  description String
  image String
  user User @relation(fields: [userId], references: [id])
  userId String
  reactions Reaction[]
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reaction {
  id Int @id @default(autoincrement())
  blog Blog @relation(fields: [blogId], references: [id])
  blogId Int
  user User @relation(fields: [userId], references: [id])
  userId String
  type ReactionTypes
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, blogId, type]) // Prevent duplicate likes for the same user and blog

}

model Comment {
  id Int @id @default(autoincrement())
  content String
  user User @relation(fields: [userId], references: [id])
  userId String
  blog Blog @relation(fields: [blogId], references: [id])
  blogId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ReactionTypes {
  LIKE
  DISLIKE
}

enum UserRoles {
  ADMIN
  USER
}